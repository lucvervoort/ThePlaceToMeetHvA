/**
 * ThePlaceToMeet.WebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Reservatie from './Reservatie';

/**
 * The Klant model module.
 * @module model/Klant
 * @version 1.0
 */
class Klant {
    /**
     * Constructs a new <code>Klant</code>.
     * @alias module:model/Klant
     */
    constructor() { 
        
        Klant.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Klant</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Klant} obj Optional instance to populate.
     * @return {module:model/Klant} The populated <code>Klant</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Klant();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('naam')) {
                obj['naam'] = ApiClient.convertToType(data['naam'], 'String');
            }
            if (data.hasOwnProperty('voornaam')) {
                obj['voornaam'] = ApiClient.convertToType(data['voornaam'], 'String');
            }
            if (data.hasOwnProperty('gsm')) {
                obj['gsm'] = ApiClient.convertToType(data['gsm'], 'String');
            }
            if (data.hasOwnProperty('bedrijf')) {
                obj['bedrijf'] = ApiClient.convertToType(data['bedrijf'], 'String');
            }
            if (data.hasOwnProperty('reservaties')) {
                obj['reservaties'] = ApiClient.convertToType(data['reservaties'], [Reservatie]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Klant</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Klant</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['naam'] && !(typeof data['naam'] === 'string' || data['naam'] instanceof String)) {
            throw new Error("Expected the field `naam` to be a primitive type in the JSON string but got " + data['naam']);
        }
        // ensure the json data is a string
        if (data['voornaam'] && !(typeof data['voornaam'] === 'string' || data['voornaam'] instanceof String)) {
            throw new Error("Expected the field `voornaam` to be a primitive type in the JSON string but got " + data['voornaam']);
        }
        // ensure the json data is a string
        if (data['gsm'] && !(typeof data['gsm'] === 'string' || data['gsm'] instanceof String)) {
            throw new Error("Expected the field `gsm` to be a primitive type in the JSON string but got " + data['gsm']);
        }
        // ensure the json data is a string
        if (data['bedrijf'] && !(typeof data['bedrijf'] === 'string' || data['bedrijf'] instanceof String)) {
            throw new Error("Expected the field `bedrijf` to be a primitive type in the JSON string but got " + data['bedrijf']);
        }
        if (data['reservaties']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['reservaties'])) {
                throw new Error("Expected the field `reservaties` to be an array in the JSON data but got " + data['reservaties']);
            }
            // validate the optional field `reservaties` (array)
            for (const item of data['reservaties']) {
                Reservatie.validateJsonObject(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
Klant.prototype['id'] = undefined;

/**
 * @member {String} email
 */
Klant.prototype['email'] = undefined;

/**
 * @member {String} naam
 */
Klant.prototype['naam'] = undefined;

/**
 * @member {String} voornaam
 */
Klant.prototype['voornaam'] = undefined;

/**
 * @member {String} gsm
 */
Klant.prototype['gsm'] = undefined;

/**
 * @member {String} bedrijf
 */
Klant.prototype['bedrijf'] = undefined;

/**
 * @member {Array.<module:model/Reservatie>} reservaties
 */
Klant.prototype['reservaties'] = undefined;






export default Klant;

