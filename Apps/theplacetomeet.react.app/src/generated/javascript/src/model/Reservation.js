/**
 * ThePlaceToMeet.WebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Catering from './Catering';
import Discount from './Discount';
import MeetingRoom from './MeetingRoom';

/**
 * The Reservation model module.
 * @module model/Reservation
 * @version 1.0
 */
class Reservation {
    /**
     * Constructs a new <code>Reservation</code>.
     * @alias module:model/Reservation
     */
    constructor() { 
        
        Reservation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Reservation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Reservation} obj Optional instance to populate.
     * @return {module:model/Reservation} The populated <code>Reservation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Reservation();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('aantalPersonen')) {
                obj['aantalPersonen'] = ApiClient.convertToType(data['aantalPersonen'], 'Number');
            }
            if (data.hasOwnProperty('dag')) {
                obj['dag'] = ApiClient.convertToType(data['dag'], 'Date');
            }
            if (data.hasOwnProperty('beginUur')) {
                obj['beginUur'] = ApiClient.convertToType(data['beginUur'], 'Number');
            }
            if (data.hasOwnProperty('duurInUren')) {
                obj['duurInUren'] = ApiClient.convertToType(data['duurInUren'], 'Number');
            }
            if (data.hasOwnProperty('tot')) {
                obj['tot'] = ApiClient.convertToType(data['tot'], 'Number');
            }
            if (data.hasOwnProperty('prijsPerUur')) {
                obj['prijsPerUur'] = ApiClient.convertToType(data['prijsPerUur'], 'Number');
            }
            if (data.hasOwnProperty('prijsPerPersoonStandaardCatering')) {
                obj['prijsPerPersoonStandaardCatering'] = ApiClient.convertToType(data['prijsPerPersoonStandaardCatering'], 'Number');
            }
            if (data.hasOwnProperty('prijsPerPersoonCatering')) {
                obj['prijsPerPersoonCatering'] = ApiClient.convertToType(data['prijsPerPersoonCatering'], 'Number');
            }
            if (data.hasOwnProperty('catering')) {
                obj['catering'] = Catering.constructFromObject(data['catering']);
            }
            if (data.hasOwnProperty('discount')) {
                obj['discount'] = Discount.constructFromObject(data['discount']);
            }
            if (data.hasOwnProperty('meetingRoom')) {
                obj['meetingRoom'] = MeetingRoom.constructFromObject(data['meetingRoom']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Reservation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Reservation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `catering`
        if (data['catering']) { // data not null
          Catering.validateJSON(data['catering']);
        }
        // validate the optional field `discount`
        if (data['discount']) { // data not null
          Discount.validateJSON(data['discount']);
        }
        // validate the optional field `meetingRoom`
        if (data['meetingRoom']) { // data not null
          MeetingRoom.validateJSON(data['meetingRoom']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
Reservation.prototype['id'] = undefined;

/**
 * @member {Number} aantalPersonen
 */
Reservation.prototype['aantalPersonen'] = undefined;

/**
 * @member {Date} dag
 */
Reservation.prototype['dag'] = undefined;

/**
 * @member {Number} beginUur
 */
Reservation.prototype['beginUur'] = undefined;

/**
 * @member {Number} duurInUren
 */
Reservation.prototype['duurInUren'] = undefined;

/**
 * @member {Number} tot
 */
Reservation.prototype['tot'] = undefined;

/**
 * @member {Number} prijsPerUur
 */
Reservation.prototype['prijsPerUur'] = undefined;

/**
 * @member {Number} prijsPerPersoonStandaardCatering
 */
Reservation.prototype['prijsPerPersoonStandaardCatering'] = undefined;

/**
 * @member {Number} prijsPerPersoonCatering
 */
Reservation.prototype['prijsPerPersoonCatering'] = undefined;

/**
 * @member {module:model/Catering} catering
 */
Reservation.prototype['catering'] = undefined;

/**
 * @member {module:model/Discount} discount
 */
Reservation.prototype['discount'] = undefined;

/**
 * @member {module:model/MeetingRoom} meetingRoom
 */
Reservation.prototype['meetingRoom'] = undefined;






export default Reservation;

