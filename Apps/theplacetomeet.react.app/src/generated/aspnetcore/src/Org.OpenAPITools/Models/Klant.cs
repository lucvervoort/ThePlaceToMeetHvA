/*
 * ThePlaceToMeet.WebApi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class Klant : IEquatable<Klant>
    {
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=true)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=true)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Naam
        /// </summary>
        [DataMember(Name="naam", EmitDefaultValue=true)]
        public string Naam { get; set; }

        /// <summary>
        /// Gets or Sets Voornaam
        /// </summary>
        [DataMember(Name="voornaam", EmitDefaultValue=true)]
        public string Voornaam { get; set; }

        /// <summary>
        /// Gets or Sets Gsm
        /// </summary>
        [DataMember(Name="gsm", EmitDefaultValue=true)]
        public string Gsm { get; set; }

        /// <summary>
        /// Gets or Sets Bedrijf
        /// </summary>
        [DataMember(Name="bedrijf", EmitDefaultValue=true)]
        public string Bedrijf { get; set; }

        /// <summary>
        /// Gets or Sets Reservaties
        /// </summary>
        [DataMember(Name="reservaties", EmitDefaultValue=true)]
        public List<Reservatie> Reservaties { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Klant {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Naam: ").Append(Naam).Append("\n");
            sb.Append("  Voornaam: ").Append(Voornaam).Append("\n");
            sb.Append("  Gsm: ").Append(Gsm).Append("\n");
            sb.Append("  Bedrijf: ").Append(Bedrijf).Append("\n");
            sb.Append("  Reservaties: ").Append(Reservaties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((Klant)obj);
        }

        /// <summary>
        /// Returns true if Klant instances are equal
        /// </summary>
        /// <param name="other">Instance of Klant to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Klant other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    
                    Id.Equals(other.Id)
                ) && 
                (
                    Email == other.Email ||
                    Email != null &&
                    Email.Equals(other.Email)
                ) && 
                (
                    Naam == other.Naam ||
                    Naam != null &&
                    Naam.Equals(other.Naam)
                ) && 
                (
                    Voornaam == other.Voornaam ||
                    Voornaam != null &&
                    Voornaam.Equals(other.Voornaam)
                ) && 
                (
                    Gsm == other.Gsm ||
                    Gsm != null &&
                    Gsm.Equals(other.Gsm)
                ) && 
                (
                    Bedrijf == other.Bedrijf ||
                    Bedrijf != null &&
                    Bedrijf.Equals(other.Bedrijf)
                ) && 
                (
                    Reservaties == other.Reservaties ||
                    Reservaties != null &&
                    other.Reservaties != null &&
                    Reservaties.SequenceEqual(other.Reservaties)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (Email != null)
                    hashCode = hashCode * 59 + Email.GetHashCode();
                    if (Naam != null)
                    hashCode = hashCode * 59 + Naam.GetHashCode();
                    if (Voornaam != null)
                    hashCode = hashCode * 59 + Voornaam.GetHashCode();
                    if (Gsm != null)
                    hashCode = hashCode * 59 + Gsm.GetHashCode();
                    if (Bedrijf != null)
                    hashCode = hashCode * 59 + Bedrijf.GetHashCode();
                    if (Reservaties != null)
                    hashCode = hashCode * 59 + Reservaties.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(Klant left, Klant right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(Klant left, Klant right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
