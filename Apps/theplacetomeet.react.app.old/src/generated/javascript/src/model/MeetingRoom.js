/**
 * ThePlaceToMeet.WebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MeetingRoomType from './MeetingRoomType';
import Reservation from './Reservation';

/**
 * The MeetingRoom model module.
 * @module model/MeetingRoom
 * @version 1.0
 */
class MeetingRoom {
    /**
     * Constructs a new <code>MeetingRoom</code>.
     * @alias module:model/MeetingRoom
     */
    constructor() { 
        
        MeetingRoom.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MeetingRoom</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MeetingRoom} obj Optional instance to populate.
     * @return {module:model/MeetingRoom} The populated <code>MeetingRoom</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MeetingRoom();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('naam')) {
                obj['naam'] = ApiClient.convertToType(data['naam'], 'String');
            }
            if (data.hasOwnProperty('vergaderruimteType')) {
                obj['vergaderruimteType'] = MeetingRoomType.constructFromObject(data['vergaderruimteType']);
            }
            if (data.hasOwnProperty('maximumAantalPersonen')) {
                obj['maximumAantalPersonen'] = ApiClient.convertToType(data['maximumAantalPersonen'], 'Number');
            }
            if (data.hasOwnProperty('prijsPerUur')) {
                obj['prijsPerUur'] = ApiClient.convertToType(data['prijsPerUur'], 'Number');
            }
            if (data.hasOwnProperty('prijsPerPersoonStandaardCatering')) {
                obj['prijsPerPersoonStandaardCatering'] = ApiClient.convertToType(data['prijsPerPersoonStandaardCatering'], 'Number');
            }
            if (data.hasOwnProperty('reservaties')) {
                obj['reservaties'] = ApiClient.convertToType(data['reservaties'], [Reservation]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MeetingRoom</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MeetingRoom</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['naam'] && !(typeof data['naam'] === 'string' || data['naam'] instanceof String)) {
            throw new Error("Expected the field `naam` to be a primitive type in the JSON string but got " + data['naam']);
        }
        if (data['reservaties']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['reservaties'])) {
                throw new Error("Expected the field `reservaties` to be an array in the JSON data but got " + data['reservaties']);
            }
            // validate the optional field `reservaties` (array)
            for (const item of data['reservaties']) {
                Reservation.validateJsonObject(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
MeetingRoom.prototype['id'] = undefined;

/**
 * @member {String} naam
 */
MeetingRoom.prototype['naam'] = undefined;

/**
 * @member {module:model/MeetingRoomType} vergaderruimteType
 */
MeetingRoom.prototype['vergaderruimteType'] = undefined;

/**
 * @member {Number} maximumAantalPersonen
 */
MeetingRoom.prototype['maximumAantalPersonen'] = undefined;

/**
 * @member {Number} prijsPerUur
 */
MeetingRoom.prototype['prijsPerUur'] = undefined;

/**
 * @member {Number} prijsPerPersoonStandaardCatering
 */
MeetingRoom.prototype['prijsPerPersoonStandaardCatering'] = undefined;

/**
 * @member {Array.<module:model/Reservation>} reservaties
 */
MeetingRoom.prototype['reservaties'] = undefined;






export default MeetingRoom;

