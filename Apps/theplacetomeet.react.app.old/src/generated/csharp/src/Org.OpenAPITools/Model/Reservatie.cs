/*
 * ThePlaceToMeet.WebApi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Reservatie
    /// </summary>
    [DataContract]
    public partial class Reservatie :  IEquatable<Reservatie>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Reservatie" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="aantalPersonen">aantalPersonen.</param>
        /// <param name="dag">dag.</param>
        /// <param name="beginUur">beginUur.</param>
        /// <param name="duurInUren">duurInUren.</param>
        /// <param name="prijsPerUur">prijsPerUur.</param>
        /// <param name="prijsPerPersoonStandaardCatering">prijsPerPersoonStandaardCatering.</param>
        /// <param name="prijsPerPersoonCatering">prijsPerPersoonCatering.</param>
        /// <param name="catering">catering.</param>
        /// <param name="korting">korting.</param>
        /// <param name="vergaderruimte">vergaderruimte.</param>
        public Reservatie(int id = default(int), int aantalPersonen = default(int), DateTime dag = default(DateTime), int beginUur = default(int), int duurInUren = default(int), double prijsPerUur = default(double), double prijsPerPersoonStandaardCatering = default(double), double prijsPerPersoonCatering = default(double), Catering catering = default(Catering), Korting korting = default(Korting), Vergaderruimte vergaderruimte = default(Vergaderruimte))
        {
            this.Id = id;
            this.AantalPersonen = aantalPersonen;
            this.Dag = dag;
            this.BeginUur = beginUur;
            this.DuurInUren = duurInUren;
            this.PrijsPerUur = prijsPerUur;
            this.PrijsPerPersoonStandaardCatering = prijsPerPersoonStandaardCatering;
            this.PrijsPerPersoonCatering = prijsPerPersoonCatering;
            this.Catering = catering;
            this.Korting = korting;
            this.Vergaderruimte = vergaderruimte;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets AantalPersonen
        /// </summary>
        [DataMember(Name="aantalPersonen", EmitDefaultValue=false)]
        public int AantalPersonen { get; set; }

        /// <summary>
        /// Gets or Sets Dag
        /// </summary>
        [DataMember(Name="dag", EmitDefaultValue=false)]
        public DateTime Dag { get; set; }

        /// <summary>
        /// Gets or Sets BeginUur
        /// </summary>
        [DataMember(Name="beginUur", EmitDefaultValue=false)]
        public int BeginUur { get; set; }

        /// <summary>
        /// Gets or Sets DuurInUren
        /// </summary>
        [DataMember(Name="duurInUren", EmitDefaultValue=false)]
        public int DuurInUren { get; set; }

        /// <summary>
        /// Gets or Sets Tot
        /// </summary>
        [DataMember(Name="tot", EmitDefaultValue=false)]
        public int Tot { get; private set; }

        /// <summary>
        /// Gets or Sets PrijsPerUur
        /// </summary>
        [DataMember(Name="prijsPerUur", EmitDefaultValue=false)]
        public double PrijsPerUur { get; set; }

        /// <summary>
        /// Gets or Sets PrijsPerPersoonStandaardCatering
        /// </summary>
        [DataMember(Name="prijsPerPersoonStandaardCatering", EmitDefaultValue=false)]
        public double PrijsPerPersoonStandaardCatering { get; set; }

        /// <summary>
        /// Gets or Sets PrijsPerPersoonCatering
        /// </summary>
        [DataMember(Name="prijsPerPersoonCatering", EmitDefaultValue=false)]
        public double PrijsPerPersoonCatering { get; set; }

        /// <summary>
        /// Gets or Sets Catering
        /// </summary>
        [DataMember(Name="catering", EmitDefaultValue=false)]
        public Catering Catering { get; set; }

        /// <summary>
        /// Gets or Sets Korting
        /// </summary>
        [DataMember(Name="korting", EmitDefaultValue=false)]
        public Korting Korting { get; set; }

        /// <summary>
        /// Gets or Sets Vergaderruimte
        /// </summary>
        [DataMember(Name="vergaderruimte", EmitDefaultValue=false)]
        public Vergaderruimte Vergaderruimte { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Reservatie {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AantalPersonen: ").Append(AantalPersonen).Append("\n");
            sb.Append("  Dag: ").Append(Dag).Append("\n");
            sb.Append("  BeginUur: ").Append(BeginUur).Append("\n");
            sb.Append("  DuurInUren: ").Append(DuurInUren).Append("\n");
            sb.Append("  Tot: ").Append(Tot).Append("\n");
            sb.Append("  PrijsPerUur: ").Append(PrijsPerUur).Append("\n");
            sb.Append("  PrijsPerPersoonStandaardCatering: ").Append(PrijsPerPersoonStandaardCatering).Append("\n");
            sb.Append("  PrijsPerPersoonCatering: ").Append(PrijsPerPersoonCatering).Append("\n");
            sb.Append("  Catering: ").Append(Catering).Append("\n");
            sb.Append("  Korting: ").Append(Korting).Append("\n");
            sb.Append("  Vergaderruimte: ").Append(Vergaderruimte).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Reservatie);
        }

        /// <summary>
        /// Returns true if Reservatie instances are equal
        /// </summary>
        /// <param name="input">Instance of Reservatie to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Reservatie input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AantalPersonen == input.AantalPersonen ||
                    (this.AantalPersonen != null &&
                    this.AantalPersonen.Equals(input.AantalPersonen))
                ) && 
                (
                    this.Dag == input.Dag ||
                    (this.Dag != null &&
                    this.Dag.Equals(input.Dag))
                ) && 
                (
                    this.BeginUur == input.BeginUur ||
                    (this.BeginUur != null &&
                    this.BeginUur.Equals(input.BeginUur))
                ) && 
                (
                    this.DuurInUren == input.DuurInUren ||
                    (this.DuurInUren != null &&
                    this.DuurInUren.Equals(input.DuurInUren))
                ) && 
                (
                    this.Tot == input.Tot ||
                    (this.Tot != null &&
                    this.Tot.Equals(input.Tot))
                ) && 
                (
                    this.PrijsPerUur == input.PrijsPerUur ||
                    (this.PrijsPerUur != null &&
                    this.PrijsPerUur.Equals(input.PrijsPerUur))
                ) && 
                (
                    this.PrijsPerPersoonStandaardCatering == input.PrijsPerPersoonStandaardCatering ||
                    (this.PrijsPerPersoonStandaardCatering != null &&
                    this.PrijsPerPersoonStandaardCatering.Equals(input.PrijsPerPersoonStandaardCatering))
                ) && 
                (
                    this.PrijsPerPersoonCatering == input.PrijsPerPersoonCatering ||
                    (this.PrijsPerPersoonCatering != null &&
                    this.PrijsPerPersoonCatering.Equals(input.PrijsPerPersoonCatering))
                ) && 
                (
                    this.Catering == input.Catering ||
                    (this.Catering != null &&
                    this.Catering.Equals(input.Catering))
                ) && 
                (
                    this.Korting == input.Korting ||
                    (this.Korting != null &&
                    this.Korting.Equals(input.Korting))
                ) && 
                (
                    this.Vergaderruimte == input.Vergaderruimte ||
                    (this.Vergaderruimte != null &&
                    this.Vergaderruimte.Equals(input.Vergaderruimte))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AantalPersonen != null)
                    hashCode = hashCode * 59 + this.AantalPersonen.GetHashCode();
                if (this.Dag != null)
                    hashCode = hashCode * 59 + this.Dag.GetHashCode();
                if (this.BeginUur != null)
                    hashCode = hashCode * 59 + this.BeginUur.GetHashCode();
                if (this.DuurInUren != null)
                    hashCode = hashCode * 59 + this.DuurInUren.GetHashCode();
                if (this.Tot != null)
                    hashCode = hashCode * 59 + this.Tot.GetHashCode();
                if (this.PrijsPerUur != null)
                    hashCode = hashCode * 59 + this.PrijsPerUur.GetHashCode();
                if (this.PrijsPerPersoonStandaardCatering != null)
                    hashCode = hashCode * 59 + this.PrijsPerPersoonStandaardCatering.GetHashCode();
                if (this.PrijsPerPersoonCatering != null)
                    hashCode = hashCode * 59 + this.PrijsPerPersoonCatering.GetHashCode();
                if (this.Catering != null)
                    hashCode = hashCode * 59 + this.Catering.GetHashCode();
                if (this.Korting != null)
                    hashCode = hashCode * 59 + this.Korting.GetHashCode();
                if (this.Vergaderruimte != null)
                    hashCode = hashCode * 59 + this.Vergaderruimte.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
